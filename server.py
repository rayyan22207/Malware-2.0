import socket
import threading
import json, os

# Connection Data
host = '127.0.0.1'
port = 55555

# Starting Server
server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
server.bind((host, port))
server.listen()

# Lists For Clients and Their Nicknames
clients = []
clients_device_name = []

# Sending Messages To All Connected Clients
def broadcast(message, sender_nickname):
    for client in clients:
        try:
            # Sending Nickname along with the message
            client.send('{}: {}'.format(sender_nickname, message).encode('utf-8'))
        except:
            # Removing And Closing Clients
            index = clients.index(client)
            clients.remove(client)
            client.close()
            nickname = clients_device_name[index]
            broadcast('{} left!'.format(nickname), 'Server')
            clients_device_name.remove(nickname)
            break

# Handling Messages From Clients
def handle(client, nickname):
    while True:
        try:
            # Broadcasting Messages
            message = client.recv(1024).decode('utf-8')
            if message == 'ls' or message == 'dir':
                # Execute command on the client side and send the output to the server
                command_output = os.popen(message).read()
                broadcast(command_output, f"{nickname}'s Device")
            else:
                print(f"{nickname}: {message}")
                broadcast(message, nickname)
        except:
            # Removing And Closing Clients
            index = clients.index(client)
            clients.remove(client)
            client.close()
            broadcast('{} left!'.format(nickname), 'Server')
            clients_device_name.remove(nickname)
            break

# Receiving / Listening Function
def receive():
    while True:
        # Accept Connection
        client, address = server.accept()
        print("Connected with {}".format(str(address)))

        # Request And Store Nickname
        client.send('device name'.encode('utf-8'))
        nickname = client.recv(1024).decode('utf-8')
        clients_device_name.append(nickname)
        clients.append(client)

        # Print And Broadcast Nickname
        print("{} joined!".format(nickname))
        broadcast("{} joined!".format(nickname), 'Server')
        client.send('Connected to server!'.encode('utf-8'))

        # Start Handling Thread For Client
        thread = threading.Thread(target=handle, args=(client, nickname))
        thread.start()

# Start the receive thread
receive_thread = threading.Thread(target=receive)
receive_thread.start()

# Continuously get input from the server admin to broadcast messages
while True:
    message = input("")
    broadcast(message, 'Server')
