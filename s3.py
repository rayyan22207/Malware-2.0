import socket
import threading

# Connection Data
host = '127.0.0.1'
port = 55555

# Starting Server
server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
server.bind((host, port))
server.listen()

# Lists For Clients and Their Device_Name
clients = []
Device_Names = []


# Sending Messages To All Connected Clients
def broadcast(message):
    for client in clients:
        print(message.decode('ascii'))
        client.send(message)
        
        
# Handling Messages From Clients
def handle(client):
    while True:
        try:
            # Broadcasting Messages
            message = client.recv(1024)
            broadcast(message)
        except:
            # Removing And Closing Clients
            index = clients.index(client)
            clients.remove(client)
            client.close()
            Device_Name = Device_Names[index]
            broadcast('{} left!'.format(Device_Name).encode('ascii'))
            Device_Names.remove(Device_Name)
            break
        

# Sending Messages To Server
def write(client):
    while True:
        message = input('.: ')
        client.send(message.encode('ascii'))
        
        
# Receiving / Listening Function
def receive():
    while True:
        # Accept Connection
        client, address = server.accept()
        print("Connected with {}".format(str(address)))

        # Request And Store Nickname
        client.send('DEVICE_!_NAME'.encode('ascii'))
        Device_Name = client.recv(1024).decode('ascii')
        Device_Names.append(Device_Name)
        clients.append(client)

        # Print And Broadcast Nickname
        print("Device name is {}".format(Device_Name))
        broadcast("{} joined!".format(Device_Name).encode('ascii'))
        client.send('Connected to server!'.encode('ascii'))

        # Start Handling Thread For Client
        thread = threading.Thread(target=handle, args=(client,))
        thread.start()
        write_thread = threading.Thread(target=write, args=(client,))
        write_thread.start()
        
        
receive()